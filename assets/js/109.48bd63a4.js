(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{478:function(v,_,t){"use strict";t.r(_);var i=t(20),r=Object(i.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h3",{attrs:{id:"jvm加载到执行"}},[v._v("JVM加载到执行")]),v._v(" "),_("p",[v._v("X.java -> javac -> X.class =>被classLoader 装载到内存(连同java类库一起)\n->(调用字节码解释器 或者JIT即时解释器)=>执行引擎=>os硬件")]),v._v(" "),_("h3",{attrs:{id:"classfileformat"}},[v._v("ClassFileFormat")]),v._v(" "),_("h4",{attrs:{id:"二进制字节流"}},[v._v("二进制字节流")]),v._v(" "),_("h4",{attrs:{id:"数据类型-u1-u2-u4-u8和-info-表类型"}},[v._v("数据类型 u1 u2 u4 u8和 _info(表类型)")]),v._v(" "),_("p",[v._v("_info的来源是hotspot源码的写法")]),v._v(" "),_("h4",{attrs:{id:"查看-16进制格式的classfile"}},[v._v("查看 16进制格式的classfile")]),v._v(" "),_("p",[v._v("sublime notpad\nidea插件 BinEd")]),v._v(" "),_("h4",{attrs:{id:"查看bytecode的方法"}},[v._v("查看ByteCode的方法")]),v._v(" "),_("p",[v._v("javap")]),v._v(" "),_("p",[v._v("JBE")]),v._v(" "),_("p",[v._v("JClassLin IDEA插件之一")]),v._v(" "),_("h4",{attrs:{id:"_16进制"}},[v._v("16进制")]),v._v(" "),_("p",[v._v("(magic CA FE BA BE) ( minor version 00 00 ) (major version 00 34  jdk1.8)\n(常量池有多少个就是这个数量转10进制-1 也就是15 00 10)  0 1 0 0 这么数 little endin")]),v._v(" "),_("h4",{attrs:{id:"volatile-实现细节"}},[v._v("volatile 实现细节")]),v._v(" "),_("h5",{attrs:{id:"字节码层面"}},[v._v("字节码层面")]),v._v(" "),_("p",[v._v("ACC_VOLATILE")]),v._v(" "),_("h5",{attrs:{id:"jvm层面"}},[v._v("JVM层面")]),v._v(" "),_("p",[v._v("StoreStoreBarrier\nvolatile写操作\nStoreStoreBarrier")]),v._v(" "),_("p",[v._v("StoreStoreBarrier\nvolatile读操作\nStoreStoreBarrier")]),v._v(" "),_("h5",{attrs:{id:"os和硬件层面"}},[v._v("OS和硬件层面")]),v._v(" "),_("p",[v._v("hsdis- HotSpot Dis Assembler")]),v._v(" "),_("h4",{attrs:{id:"synchronized-实现细节"}},[v._v("synchronized 实现细节")]),v._v(" "),_("h5",{attrs:{id:"字节码层面-2"}},[v._v("字节码层面")]),v._v(" "),_("p",[v._v("monitorenter monitorexit")]),v._v(" "),_("h5",{attrs:{id:"jvm层面-2"}},[v._v("JVM层面")]),v._v(" "),_("p",[v._v("C C++ 调用了操作系统提供的同步指令")]),v._v(" "),_("p",[v._v("#####OS和硬件层面\nx86 lock comxchg xxxx")]),v._v(" "),_("h4",{attrs:{id:"对象的内存布局"}},[v._v("对象的内存布局")]),v._v(" "),_("h5",{attrs:{id:"普通对象"}},[v._v("普通对象")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("对象头：markword  8")])]),v._v(" "),_("li",[_("p",[v._v("ClassPointer指针：-XX:+UseCompressedClassPointers(对象压缩指针) 为4字节 不开启为8字节")])]),v._v(" "),_("li",[_("p",[v._v("实例数据")]),v._v(" "),_("ol",[_("li",[v._v("引用类型：-XX:+UseCompressedOops(引用指针压缩) 为4字节 不开启为8字节\nOops Ordinary Object Pointers")]),v._v(" "),_("li",[v._v("基本数据类型   就根据他的长度")])])]),v._v(" "),_("li",[_("p",[v._v("Padding对齐，对其为8的倍数")])])]),v._v(" "),_("h5",{attrs:{id:"数组对象"}},[v._v("数组对象")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("对象头：markword 8")])]),v._v(" "),_("li",[_("p",[v._v("ClassPointer指针同上")])]),v._v(" "),_("li",[_("p",[v._v("数组长度：4字节")])]),v._v(" "),_("li",[_("p",[v._v("数组数据")])]),v._v(" "),_("li",[_("p",[v._v("对齐 对其为8的倍数")])])]),v._v(" "),_("h4",{attrs:{id:"对象的创建过程"}},[v._v("对象的创建过程")]),v._v(" "),_("p",[v._v("1.class loading new 之后 加载到内存")]),v._v(" "),_("p",[v._v("2.class linking(verification(校验),preparation(静态变量设默认值) ,resolution(解析))")]),v._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[v._v("class Initializing( 初始化 ->静态变量设为初始值 执行静态语句块)")])]),v._v(" "),_("p",[v._v("4.申请对象内存")]),v._v(" "),_("p",[v._v("5.成员变量赋默认值")]),v._v(" "),_("p",[v._v("6.调用构造方法 (init)\n1.成员变量顺序赋初始值\n2.执行构造方法语句")]),v._v(" "),_("h5",{attrs:{id:"对象头"}},[v._v("对象头")]),v._v(" "),_("p",[_("img",{attrs:{src:"/img/jvm/markword.png",alt:"markword.png"}}),v._v(" 32位的\nmarkword 64位\n有对象的hashcode 25bit\n分代年龄  4bit\n是否偏向锁 1bit\n2bit 锁标志位")]),v._v(" "),_("h5",{attrs:{id:"对象怎么定位"}},[v._v("对象怎么定位")]),v._v(" "),_("ol",[_("li",[v._v("句柄池")]),v._v(" "),_("li",[v._v("直接指针\n就HotSpot而言，他使用的是直接指针访问方式进行对象访问，")])])])}),[],!1,null,null,null);_.default=r.exports}}]);