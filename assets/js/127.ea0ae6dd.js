(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{399:function(e,t,l){"use strict";l.r(t);var o=l(10),r=Object(o.a)({},function(){var e=this,t=e.$createElement,l=e._self._c||t;return l("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[l("h1",{attrs:{id:"原理"}},[e._v("原理")]),e._v(" "),l("h2",{attrs:{id:"启动"}},[e._v("启动")]),e._v(" "),l("ol",[l("li",[e._v("Netty服务器启动，监听一个端口，如dubbo框架，监听20880，初始化一个通道(NioServerSocketChannel)")]),e._v(" "),l("li",[e._v("把NioServerSocketChannel注册到Selector上，轮询accept事件，即通道准备接收数据的事件")]),e._v(" "),l("li",[e._v("accept事件触发后处理通道的信息，建立起与客户端连接的Channel(NioSocketChannel)")]),e._v(" "),l("li",[e._v("把NioSocketChannel注册到另一个Selector上，这个Selector轮询read和write事件")]),e._v(" "),l("li",[e._v("读就绪或写就绪后就会把任务抛给任务队列执行")])]),e._v(" "),l("h3",{attrs:{id:"单线程模型代码"}},[e._v("单线程模型代码")]),e._v(" "),l("ul",[l("li",[e._v("每个线程对应一个selector")]),e._v(" "),l("li",[e._v("多线程情况下,该主机,该程序的并发客户端被分配到多个selector上")]),e._v(" "),l("li",[e._v("注意,每个客户端只绑定一个selector")]),e._v(" "),l("li",[e._v("不会有交互问题")])])])},[],!1,null,null,null);t.default=r.exports}}]);