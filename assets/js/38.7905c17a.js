(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{311:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"mysql-锁"}},[t._v("Mysql 锁")]),t._v(" "),a("ul",[a("li",[t._v("对表进行加锁,已只读的方法创建锁")]),t._v(" "),a("li",[t._v("特点： 如果是读锁，在同个session中对表进行修改会"),a("strong",[t._v("报错")]),t._v("，")]),t._v(" "),a("li",[t._v("如果在不同的session中对表加了读锁的表进行修改操作，不会报错，而是"),a("strong",[t._v("等待")])])]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("lock table tableName READ\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"acid"}},[t._v("ACID")]),t._v(" "),a("ul",[a("li",[t._v("原子性：undo log (mvcc)")]),t._v(" "),a("li",[t._v("一致性：最核心和最本质的要求")]),t._v(" "),a("li",[t._v("隔离性：锁,mvcc")]),t._v(" "),a("li",[t._v("持久性：redo log")])]),t._v(" "),a("h3",{attrs:{id:"mvcc"}},[t._v("MVCC")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.多版本并发控制")])]),t._v(" "),a("li",[a("p",[t._v("2.当前读")])]),t._v(" "),a("li",[a("p",[t._v("四个 隔离级别 通过 mvcc 和锁实现\n1.READ-UNCOMMITTED")])])]),t._v(" "),a("p",[t._v("2.READ_COMMITTED")]),t._v(" "),a("p",[t._v("3.REPEATABLE-READ")]),t._v(" "),a("p",[t._v("4.SERIALIZABLE")]),t._v(" "),a("h4",{attrs:{id:"实现原理"}},[t._v("实现原理")]),t._v(" "),a("p",[t._v("1.三个隐藏字段")]),t._v(" "),a("ul",[a("li",[t._v("DB_TRX_ID  最近修改事务id")]),t._v(" "),a("li",[t._v("DB_ROLL_PTR 回滚指针")]),t._v(" "),a("li",[t._v("DB_ROW_ID  隐藏的主键")])]),t._v(" "),a("p",[t._v("2.undo log")]),t._v(" "),a("p",[t._v("3.read view\n三个全局属性")]),t._v(" "),a("ul",[a("li",[t._v("1)trx_list 一个数值列表 用来维护read view 生成时刻正在活跃的事务id")]),t._v(" "),a("li",[t._v("2)up_limit_id 记录trx_list 列表中 事务最小的id")]),t._v(" "),a("li",[t._v("3)low_limit_id read view 生成时刻 系统尚未分配的下一个事务id")])]),t._v(" "),a("h3",{attrs:{id:"查询innodb-锁的问题"}},[t._v("查询innodb 锁的问题")]),t._v(" "),a("ul",[a("li",[t._v("锁类型：\n共享锁 排他锁 意向锁（表锁） 记录锁（行锁） 间隙锁  临键锁 自增锁")]),t._v(" "),a("li",[t._v("开启innodb_lock_output;")]),t._v(" "),a("li",[t._v("查看死锁日志 show engine innodb status；")])]),t._v(" "),a("h3",{attrs:{id:"幻读"}},[t._v("幻读")]),t._v(" "),a("ul",[a("li",[t._v("当前读和快照读冲突")]),t._v(" "),a("li",[t._v("事务A按照一定条件进行数据读取,期间事务B插入了相同搜索条件读新数据，事务A在按照原先条件进行读取发现了事务B未提交的数据")]),t._v(" "),a("li",[t._v("临键锁")])]),t._v(" "),a("h3",{attrs:{id:"数据库索引"}},[t._v("数据库索引")]),t._v(" "),a("h4",{attrs:{id:"io-读取次数少-分块读取-磁盘预读"}},[t._v("IO 读取次数少 分块读取 磁盘预读")]),t._v(" "),a("ul",[a("li",[t._v("磁盘和内存 交互用页 然后")]),t._v(" "),a("li",[t._v("二叉树的 每个节点有两个分支就会有很深")]),t._v(" "),a("li",[t._v("变成多叉树还有序 B树  数据和key放在一起 然后存储空间大 树分支范围就小 就会变深")]),t._v(" "),a("li",[t._v("所以用B+树 B+树 叶子结点有指针 并且叶子结点存数据")])]),t._v(" "),a("h4",{attrs:{id:"数据结构-b-树-二叉树-avl树-红黑树-b树"}},[t._v("数据结构 B+树 二叉树 AVL树  红黑树 B树")]),t._v(" "),a("h3",{attrs:{id:"索引"}},[t._v("索引")]),t._v(" "),a("h4",{attrs:{id:"优化"}},[t._v("优化")]),t._v(" "),a("p",[t._v("1.最左匹配原则\n2.索引不要计算\n3.is null 和is not null 不要用\n4.不要用or操作符\n5.不要类型转换\n6.关联字段的长度 编码要一样\n7.如果全表扫描比使用索引快也会失效")]),t._v(" "),a("h5",{attrs:{id:"索引下推"}},[t._v("索引下推")]),t._v(" "),a("p",[t._v("当进行索引查询时，首先根据索引来查找记录，然后再根据where条件来过滤记录")]),t._v(" "),a("h4",{attrs:{id:"explain"}},[t._v("explain")]),t._v(" "),a("p",[t._v("1.id  执行顺序 越大执行越早")]),t._v(" "),a("p",[t._v("2.select_type  没什么用")]),t._v(" "),a("p",[t._v("3.table  查什么表")]),t._v(" "),a("p",[t._v("4.partitions")]),t._v(" "),a("p",[t._v("5.type  访问类型 重要 效率最低是all 最高是system 保证在range以上")]),t._v(" "),a("p",[t._v("6.possible_keys  可能用到的索引")]),t._v(" "),a("p",[t._v("7.key  所用的索引")]),t._v(" "),a("p",[t._v("8.key_len  索引使用的字节数")]),t._v(" "),a("p",[t._v("9.ref  索引被哪一列使用了")]),t._v(" "),a("p",[t._v("10.rows 预估使用的行数")]),t._v(" "),a("p",[t._v("11.extra 包含额外的信息")]),t._v(" "),a("h3",{attrs:{id:"分库分表"}},[t._v("分库分表")]),t._v(" "),a("h4",{attrs:{id:"分表模式"}},[t._v("分表模式")]),t._v(" "),a("p",[t._v("1.水平分表\n拆数据 按照范围分\n2.垂直分表\n拆字段 哪些字段常用，哪些不常用")]),t._v(" "),a("h3",{attrs:{id:"分库分表原则"}},[t._v("分库分表原则")]),t._v(" "),a("p",[t._v("1.能不切分尽量不要切分\n2.如果一定要切分选择合适的切分规则，提前规划好\n3.数据切分尽量通过数据冗余或者表分组来降低跨库join的可能\n4.由于中间件对于数据的join实现的优劣难以把握,尽量少使用多表join")]),t._v(" "),a("h3",{attrs:{id:"描述一下innodb和myisam的区别？"}},[t._v("描述一下InnoDB和MyISAM的区别？")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("区别")]),t._v(" "),a("th",[t._v("Innodb")]),t._v(" "),a("th",[t._v("MyISAM")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("事务")]),t._v(" "),a("td",[t._v("支持")]),t._v(" "),a("td",[t._v("不支持")])]),t._v(" "),a("tr",[a("td",[t._v("外键")]),t._v(" "),a("td",[t._v("支持")]),t._v(" "),a("td",[t._v("不支持")])]),t._v(" "),a("tr",[a("td",[t._v("索引")]),t._v(" "),a("td",[t._v("即支持聚簇索引又支持非聚簇索引")]),t._v(" "),a("td",[t._v("只支持非聚簇索引")])]),t._v(" "),a("tr",[a("td",[t._v("行锁")]),t._v(" "),a("td",[t._v("支持")]),t._v(" "),a("td",[t._v("不支持")])]),t._v(" "),a("tr",[a("td",[t._v("表锁")]),t._v(" "),a("td",[t._v("支持")]),t._v(" "),a("td",[t._v("支持")])]),t._v(" "),a("tr",[a("td",[t._v("存储文件")]),t._v(" "),a("td",[t._v("frm，ibd")]),t._v(" "),a("td",[t._v("frm,myi,myd")])]),t._v(" "),a("tr",[a("td",[t._v("具体行数")]),t._v(" "),a("td",[t._v("每次必须要全表扫描统计行数")]),t._v(" "),a("td",[t._v("通过变量保存行数")])])])]),t._v(" "),a("p",[t._v("如何选择？")]),t._v(" "),a("p",[t._v("​\t\t1、是否需要支持事务，如果需要选择innodb，如果不需要选择myisam")]),t._v(" "),a("p",[t._v("​\t\t2、如果表的大部分请求都是读请求，可以考虑myisam，如果既有读也有写，使用innodb")]),t._v(" "),a("p",[t._v("​\t\t现在mysql的默认存储引擎已经变成了Innodb,推荐使用innodb")]),t._v(" "),a("h3",{attrs:{id:"主从复制"}},[t._v("主从复制")]),t._v(" "),a("h5",{attrs:{id:"原理："}},[t._v("原理：")]),t._v(" "),a("p",[t._v("​\t\t（1）master服务器将数据的改变记录二进制binlog日志，当master上的数据发生改变时，则将其改变写入二进制日志中；")]),t._v(" "),a("p",[t._v("​\t\t（2）slave服务器会在一定时间间隔内对master二进制日志进行探测其是否发生改变，如果发生改变，则开始一个I/OThread请求master二进制事件")]),t._v(" "),a("p",[t._v("​\t\t（3）同时主节点为每个I/O线程启动一个dump线程，用于向其发送二进制事件，并保存至从节点本地的中继日志中，从节点将启动SQL线程从中继日志中读取二进制日志，在本地重放，使得其数据和主节点的保持一致，最后I/OThread和SQLThread将进入睡眠状态，等待下一次被唤醒。")]),t._v(" "),a("h5",{attrs:{id:"也就是说："}},[t._v("也就是说：")]),t._v(" "),a("ul",[a("li",[t._v("从库会生成两个线程,一个I/O线程,一个SQL线程;")]),t._v(" "),a("li",[t._v("I/O线程会去请求主库的binlog,并将得到的binlog写到本地的relay-log(中继日志)文件中;")]),t._v(" "),a("li",[t._v("主库会生成一个log dump线程,用来给从库I/O线程传binlog;")]),t._v(" "),a("li",[t._v("SQL线程,会读取relay log文件中的日志,并解析成sql语句逐一执行;")])]),t._v(" "),a("h5",{attrs:{id:"注意："}},[t._v("注意：")]),t._v(" "),a("p",[t._v("1--master将操作语句记录到binlog日志中，然后授予slave远程连接的权限（master一定要开启binlog二进制日志功能；通常为了数据安全考虑，slave也开启binlog功能）。")]),t._v(" "),a("p",[t._v("2--slave开启两个线程：IO线程和SQL线程。其中：IO线程负责读取master的binlog内容到中继日志relay log里；SQL线程负责从relay log日志里读出binlog内容，并更新到slave的数据库里，这样就能保证slave数据和master数据保持一致了。")]),t._v(" "),a("p",[t._v("3--Mysql复制至少需要两个Mysql的服务，当然Mysql服务可以分布在不同的服务器上，也可以在一台服务器上启动多个服务。")]),t._v(" "),a("p",[t._v("4--Mysql复制最好确保master和slave服务器上的Mysql版本相同（如果不能满足版本一致，那么要保证master主节点的版本低于slave从节点的版本）")]),t._v(" "),a("p",[t._v("5--master和slave两节点间时间需同步")]),t._v(" "),a("p",[t._v("###主从配置")]),t._v(" "),a("h4",{attrs:{id:"一主一从"}},[t._v("一主一从")]),t._v(" "),a("h5",{attrs:{id:"主"}},[t._v("主:")]),t._v(" "),a("h6",{attrs:{id:"修改配置文件，执行以下命令打开mysql配置文件"}},[t._v("修改配置文件，执行以下命令打开mysql配置文件")]),t._v(" "),a("p",[t._v("vi /etc/my.cnf")]),t._v(" "),a("h6",{attrs:{id:"在mysqld模块中添加如下配置信息"}},[t._v("在mysqld模块中添加如下配置信息")]),t._v(" "),a("p",[t._v("log-bin=master-bin #二进制文件名称")]),t._v(" "),a("p",[t._v("binlog-format=ROW  #二进制日志格式，有row、statement、mixed三种格式，row指的是把改变的内容复制过去，而不是把命令在从服务器上执行一遍，statement指的是在主服务器上执行的SQL语句，在从服务器上执行同样的语句。MySQL默认采用基于语句的复制，效率比较高。mixed指的是默认采用基于语句的复制，一旦发现基于语句的无法精确的复制时，就会采用基于行的复制。")]),t._v(" "),a("p",[t._v("server-id=1\t\t   #要求各个服务器的id必须不一样")]),t._v(" "),a("p",[t._v("binlog-do-db=msb   #同步的数据库名称")]),t._v(" "),a("h3",{attrs:{id:"mysql主从同步延时分析"}},[t._v("mysql主从同步延时分析")]),t._v(" "),a("p",[t._v("​\t\tmysql的主从复制都是单线程的操作，主库对所有DDL和DML产生的日志写进binlog，由于binlog是顺序写，所以效率很高，slave的sql thread线程将主库的DDL和DML操作事件在slave中重放。DML和DDL的IO操作是随机的，不是顺序，所以成本要高很多，另一方面，由于sql thread也是单线程的，当主库的并发较高时，产生的DML数量超过slave的SQL thread所能处理的速度，或者当slave中有大型query语句产生了锁等待，那么延时就产生了。")]),t._v(" "),a("p",[t._v("​\t\t解决方案：")]),t._v(" "),a("p",[t._v("​\t\t1.业务的持久化层的实现采用分库架构，mysql服务可平行扩展，分散压力。")]),t._v(" "),a("p",[t._v("​\t\t2.单个库读写分离，一主多从，主写从读，分散压力。这样从库压力比主库高，保护主库。")]),t._v(" "),a("p",[t._v("​\t\t3.服务的基础架构在业务和mysql之间加入memcache或者redis的cache层。降低mysql的读压力。")]),t._v(" "),a("p",[t._v("​\t\t4.不同业务的mysql物理上放在不同机器，分散压力。")]),t._v(" "),a("p",[t._v("​\t\t5.使用比主库更好的硬件设备作为slave，mysql压力小，延迟自然会变小。")]),t._v(" "),a("p",[t._v("​\t\t6.使用更加强劲的硬件设备")]),t._v(" "),a("p",[t._v("**mysql5.7之后使用MTS并行复制技术，永久解决复制延时问题")]),t._v(" "),a("h4",{attrs:{id:"半同步复制"}},[t._v("半同步复制")]),t._v(" "),a("p",[t._v("事物在主库执行完binlog后接受到从库的ACK，才会回复客户端。所以，相比而言，性能有所降低")]),t._v(" "),a("p",[t._v("1.确保事务提交后binlog至少传输到一个从库")]),t._v(" "),a("p",[t._v("2.不保证从库应用完成这个事务的binlog")]),t._v(" "),a("p",[t._v("3.网络异常或从库宕机，卡主库，直到超时或从库恢复")]),t._v(" "),a("h1",{attrs:{id:"mysql的主从复制延迟问题"}},[t._v("mysql的主从复制延迟问题")]),t._v(" "),a("h2",{attrs:{id:"mysql-主从同步"}},[t._v("mysql 主从同步")]),t._v(" "),a("pre",[a("code",[t._v(" 主数据库写入binary log （bin log）\n 从库 IO Thread 去读 然后 写入relay log \n 从库 SQL Thread 去读 然后执行sql 持久化\n")])]),t._v(" "),a("h3",{attrs:{id:"_1、如何查看同步延迟状态？"}},[t._v("1、如何查看同步延迟状态？")]),t._v(" "),a("pre",[a("code",[t._v(" ​\t在从服务器上通过  show slave status 查看具体的参数，有几个参数比较重要：\n \n ​\t**master_log_file:\tslave中的IO线程正在读取的主服务器二进制日志文件的名称**\n \n ​\t**read_master_log_pos:\t在当前的主服务器二进制日志中，slave中的IO线程已经读取的位置**\n \n ​\t**relay_log_file:\tsql线程当前正在读取和执行的中继日志文件的名称**\n \n ​\t**relay_log_pos:\t在当前的中继日志中，sql线程已经读取和执行的位置**\n \n ​\t**relay_master_log_file:\t由sql线程执行的包含多数近期事件的主服务器二进制日志文件的名称**\n \n ​\t**slave_io_running:\tIO线程是否被启动并成功的连接到主服务器上**\n \n    **slave_sql_running:\tsql线程是否被启动**\n \n    **seconds_behind_master:\t从属服务器sql线程和从属服务器IO线程之间的事件差距，单位以秒计**\n")])]),t._v(" "),a("h3",{attrs:{id:"_2、主从复制延迟产生的原因有哪些？"}},[t._v("2、主从复制延迟产生的原因有哪些？")]),t._v(" "),a("p",[t._v("​\t\t1、在某些部署环境中，备库所在的机器性能要比主库所在的机器性能差。此时如果机器的资源不足的话就会影响备库同步的效率；")]),t._v(" "),a("p",[t._v("​\t\t2、备库充当了读库，一般情况下主要写的压力在于主库，那么备库会提供一部分读的压力，而如果备库的查询压力过大的话，备库的查询消耗了大量的CPU资源，那么必不可少的就会影响同步的速度")]),t._v(" "),a("p",[t._v("​\t\t3、大事务执行，如果主库的一个事务执行了10分钟，而binlog的写入必须要等待事务完成之后，才会传入备库，那么此时在开始执行的时候就已经延迟了10分钟了")]),t._v(" "),a("p",[t._v("​\t\t4、主库的写操作是顺序写binlog，从库单线程去主库顺序读binlog，从库取到binlog之后在本地执行。mysql的主从复制都是"),a("strong",[t._v("单线程")]),t._v("的操作，但是由于主库是顺序写，所以效率很高，而从库也是顺序读取主库的日志，此时的效率也是比较高的，但是当数据拉取回来之后变成了随机的操作，而不是顺序的，所以此时成本会提高。")]),t._v(" "),a("p",[t._v("​\t\t5、 从库在同步数据的同时，可能跟其他查询的线程发生锁抢占的情况，此时也会发生延时。")]),t._v(" "),a("p",[t._v("​\t\t6、 当主库的TPS并发非常高的时候，产生的DDL数量超过了一个线程所能承受的范围的时候，那么也可能带来延迟")]),t._v(" "),a("p",[t._v("​\t\t7、 在进行binlog日志传输的时候，如果网络带宽也不是很好，那么网络延迟也可能造成数据同步延迟")]),t._v(" "),a("p",[t._v("​\t\t这些就是可能会造成备库延迟的原因")]),t._v(" "),a("h3",{attrs:{id:"_3、如何解决复制延迟的问题"}},[t._v("3、如何解决复制延迟的问题")]),t._v(" "),a("p",[t._v("​\t\t先说一些虚的东西，什么叫虚的东西呢？就是一听上去感觉很有道理，但是在实施或者实际的业务场景中可能难度很大或者很难实现，下面我们从几个方面来进行描述：")]),t._v(" "),a("h4",{attrs:{id:"_1、架构方面"}},[t._v("1、架构方面")]),t._v(" "),a("p",[t._v("​\t\t\t1、业务的持久化层的实现采用分库架构，让不同的业务请求分散到不同的数据库服务上，分散单台机器的压力")]),t._v(" "),a("p",[t._v("​\t\t\t2、服务的基础架构在业务和mysql之间加入缓存层，减少mysql的读的压力，但是需要注意的是，如果数据经常要发生修改，那么这种设计是不合理的，因为需要频繁的去更新缓存中的数据，保持数据的一致性，导致缓存的命中率很低，所以此时就要慎用缓存了")]),t._v(" "),a("p",[t._v("​\t\t\t3、使用更好的硬件设备，比如cpu，ssd等，但是这种方案一般对于公司而言不太能接受，原因也很简单，会增加公司的成本，而一般公司其实都很抠门，所以意义也不大，但是你要知道这也是解决问题的一个方法，只不过你需要评估的是投入产出比而已。")]),t._v(" "),a("h4",{attrs:{id:"_2、从库配置方面"}},[t._v("2、从库配置方面")]),t._v(" "),a("p",[t._v("​\t\t"),a("strong",[t._v("1、修改sync_binlog的参数的值")])]),t._v(" "),a("p",[t._v("​\t\t想要合理设置此参数的值必须要清楚的知道binlog的写盘的流程：")]),t._v(" "),a("p",[t._v("​\t\t"),a("img",{attrs:{src:"/img/mysql/sync_binlog.png",alt:""}})]),t._v(" "),a("p",[t._v("​\t\t可以看到，每个线程有自己的binlog cache，但是共用同一份binlog。")]),t._v(" "),a("p",[t._v("​\t\t图中的write，指的就是把日志写入到文件系统的page cache，并没有把数据持久化到磁盘，所以速度快")]),t._v(" "),a("p",[t._v("​\t\t图中的fsync，才是将数据持久化到磁盘的操作。一般情况下，我们认为fsync才占用磁盘的IOPS")]),t._v(" "),a("p",[t._v("​\t\t而write和fsync的时机就是由参数sync_binlog来进行控制的。")]),t._v(" "),a("p",[t._v("​\t\t1、当sync_binlog=0的时候，表示每次提交事务都只write，不fsync")]),t._v(" "),a("p",[t._v("​\t\t2、当sync_binlog=1的时候，表示每次提交事务都执行fsync")]),t._v(" "),a("p",[t._v("​\t\t3、当sync_binlog=N的时候，表示每次提交事务都write，但积累N个事务后才fsync。")]),t._v(" "),a("p",[t._v("​\t\t一般在公司的大部分应用场景中，我们建议将此参数的值设置为1，因为这样的话能够保证数据的安全性，但是如果出现主从复制的延迟问题，可以考虑将此值设置为100~1000中的某个数值，非常不建议设置为0，因为设置为0的时候没有办法控制丢失日志的数据量，但是如果是对安全性要求比较高的业务系统，这个参数产生的意义就不是那么大了。")]),t._v(" "),a("p",[t._v("​\t\t2、直接禁用salve上的binlog，当从库的数据在做同步的时候，有可能从库的binlog也会进行记录，此时的话肯定也会消耗io的资源，因此可以考虑将其关闭，但是需要注意，如果你搭建的集群是级联的模式的话，那么此时的binlog也会发送到另外一台从库里方便进行数据同步，此时的话，这个配置项也不会起到太大的作用。")]),t._v(" "),a("p",[t._v("​\t\t3、设置innodb_flush_log_at_trx_commit 属性，这个属性在我讲日志的时候讲过，用来表示每一次的事务提交是否需要把日志都写入磁盘，这是很浪费时间的，一共有三个属性值，分别是0（每次写到服务缓存，一秒钟刷写一次），1（每次事务提交都刷写一次磁盘），2（每次写到os缓存，一秒钟刷写一次），一般情况下我们推荐设置成2，这样就算mysql的服务宕机了，卸载os缓存中的数据也会进行持久化。")]),t._v(" "),a("h3",{attrs:{id:"_4、从根本上解决主从复制的延迟问题"}},[t._v("4、从根本上解决主从复制的延迟问题")]),t._v(" "),a("p",[t._v("​\t\t很多同学在自己线上的业务系统中都使用了mysql的主从复制，但是大家需要注意的是，并不是所有的场景都适合主从复制，一般情况下是读要远远多于写的应用，同时读的时效性要求不那么高的场景。如果真实场景中真的要求立马读取到更新之后的数据，那么就只能强制读取主库的数据，所以在进行实现的时候要考虑实际的应用场景，不要为了技术而技术，这是很严重的事情。")]),t._v(" "),a("p",[t._v("​\t\t在mysql5.6版本之后引入了一个概念，就是我们通常说的并行复制，如下图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/mysql/%E5%B9%B6%E8%A1%8C%E5%A4%8D%E5%88%B6.png",alt:"image-20200715210204654"}})]),t._v(" "),a("p",[t._v("​\t\t通过上图我们可以发现其实所谓的并行复制，就是在中间添加了一个分发的环节，也就是说原来的sql_thread变成了现在的coordinator组件，当日志来了之后，coordinator负责读取日志信息以及分发事务，真正的日志执行的过程是放在了worker线程上，由多个线程并行的去执行。")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查看并行的slave的线程的个数，默认是0.表示单线程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("show")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global")]),t._v(" variables "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("like")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'slave_parallel_workers'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 根据实际情况保证开启多少线程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global")]),t._v(" slave_parallel_workers "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 设置并发复制的方式，默认是一个线程处理一个库，值为database")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("show")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global")]),t._v(" variables "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("like")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%slave_parallel_type%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 停止slave")]),t._v("\nstop slave"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 设置属性值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global")]),t._v(" slave_parallel_type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'logical_check'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 开启slave")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("start")]),t._v(" slave\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查看线程数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("show")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("full")]),t._v(" processlist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("p",[t._v("​\t\t通过上述的配置可以完成我们说的并行复制，但是此时你需要思考几个问题")]),t._v(" "),a("p",[t._v("​\t\t1、在并行操作的时候，可能会有并发的事务问题，我们的备库在执行的时候可以按照轮训的方式发送给各个worker吗？")]),t._v(" "),a("p",[t._v("​\t\t答案是不行的，因为事务被分发给worker以后，不同的worker就开始独立执行了，但是，由于CPU的不同调度策略，很可能第二个事务最终比第一个事务先执行，而如果刚刚好他们修改的是同一行数据，那么因为执行顺序的问题，可能导致主备的数据不一致。")]),t._v(" "),a("p",[t._v("​\t\t2、同一个事务的多个更新语句，能不能分给不同的worker来执行呢？")]),t._v(" "),a("p",[t._v("​\t\t答案是也不行，举个例子，一个事务更新了表t1和表t2中的各一行，如果这两条更新语句被分到不同worker的话，虽然最终的结果是主备一致的，但如果表t1执行完成的瞬间，备库上有一个查询，就会看到这个事务更新了一半的结果，破坏了事务逻辑的隔离性。")]),t._v(" "),a("p",[t._v("​\t\t我们通过讲解上述两个问题的最主要目的是为了说明一件事，就是coordinator在进行分发的时候，需要遵循的策略是什么？")]),t._v(" "),a("p",[t._v("​\t\t1、不能造成更新覆盖。这就要求更新同一行的两个事务，必须被分发到同一个worker中。")]),t._v(" "),a("p",[t._v("​\t\t2、同一个事务不能被拆开，必须放到同一个worker中。")]),t._v(" "),a("p",[t._v("​\t\t听完上面的描述，我们来说一下具体实现的原理和过程。")]),t._v(" "),a("p",[t._v("​\t\t如果让我们自己来设计的话，我们应该如何操作呢？这是一个值得思考的问题。其实如果按照实际的操作的话，我们可以按照粒度进行分类，分为按库分发，按表分发，按行分发。")]),t._v(" "),a("p",[t._v("​\t\t其实不管按照什么方式进行分发，大家需要注意的就是在分发的时候必须要满足我们上面说的两条规则，所以当我们进行分发的时候要在每一个worker上定义一个hash表，用来保存当前这个work正在执行的事务所涉及到的表。hash表的key值按照不同的粒度需要存储不同的值：")]),t._v(" "),a("p",[t._v("​\t\t按库分发：key值是数据库的名字，这个比较简单")]),t._v(" "),a("p",[t._v("​\t\t按表分发：key值是库名+表名")]),t._v(" "),a("p",[t._v("​\t\t按行分发：key值是库名+表名+唯一键")]),t._v(" "),a("h4",{attrs:{id:"_1、mysql5-6版本的并行复制策略"}},[t._v("1、MySQL5.6版本的并行复制策略")]),t._v(" "),a("p",[t._v("​\t\t其实从mysql的5.6版本开始就已经支持了并行复制，只是支持的粒度是按库并行，这也是为什么现在的版本中可以选择类型为database，其实说的就是支持按照库进行并行复制。")]),t._v(" "),a("p",[t._v("​\t\t但是其实用过的同学应该都知道，这个策略的并行效果，取决于压力模型。如果在主库上有多个DB，并且各个DB的压力均衡，使用这个策略的效果会很好，但是如果主库的所有表都放在同一DB上，那么所有的操作都会分发给一个worker，变成单线程操作了，那么这个策略的效果就不好了，因此在实际的生产环境中，用的并不是特别多。")]),t._v(" "),a("h4",{attrs:{id:"_2、mariadb的并行复制策略"}},[t._v("2、mariaDB的并行复制策略")]),t._v(" "),a("p",[t._v("​\t\t在mysql5.7的时候采用的是基于组提交的并行复制，换句话说，slave服务器的回放与主机是一致的，即主库是如何并行执行的那么slave就如何怎样进行并行回放，这点其实是参考了mariaDB的并行复制，下面我们来看下其实现原理。")]),t._v(" "),a("p",[t._v("​\t\tmariaDB的并行复制策略利用的就是这个特性：")]),t._v(" "),a("p",[t._v("​\t\t1、能够在同一组里提交的事务，一定不会修改同一行；")]),t._v(" "),a("p",[t._v("​\t\t2、主库上可以并行执行的事务，备库上也一定是可以并行执行的。")]),t._v(" "),a("p",[t._v("​\t\t在实现上，mariaDB是这么做的：")]),t._v(" "),a("p",[t._v("​\t\t1、在一组里面一起提交的事务，有一个相同的commit_id,下一组就是commit_id+1;")]),t._v(" "),a("p",[t._v("​\t\t2、commit_id直接写到binlog里面；")]),t._v(" "),a("p",[t._v("​\t\t3、传到备库应用的时候，相同commit_id的事务会分发到多个worker执行；")]),t._v(" "),a("p",[t._v("​\t\t4、这一组全部执行完成后，coordinator再去取下一批。")]),t._v(" "),a("p",[t._v("​\t\t这是mariaDB的并行复制策略，大体上看起来是没有问题的，但是你仔细观察的话会发现他并没有实现“真正的模拟主库并发度”这个目标，在主库上，一组事务在commit的时候，下一组事务是同时处于“执行中”状态的。")]),t._v(" "),a("p",[t._v("​\t\t我们真正想要达到的并行复制应该是如下的状态，也就是说当第一组事务提交的是，下一组事务是运行的状态，当第一组事务提交完成之后，下一组事务会立刻变成commit状态。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/mysql/mariaDB1.png",alt:"img"}})]),t._v(" "),a("p",[t._v("​\t\t但是按照mariaDB的并行复制策略，那么备库上的执行状态会变成如下所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/mysql/mariaDB2.png",alt:"img"}})]),t._v(" "),a("p",[t._v("​\t\t可以看到，这张图跟上面这张图的最大区别在于，备库上执行的时候必须要等第一组事务执行完成之后，第二组事务才能开始执行，这样系统的吞吐量就不够了。而且这个方案很容易被大事务拖后腿，如果trx2是一个大事务，那么在备库应用的时候，trx1和trx3执行完成之后，就只能等trx2完全执行完成，下一组才能开始执行，这段时间，只有一个worker线程在工作，是对资源的浪费。")]),t._v(" "),a("h4",{attrs:{id:"_3、mysql5-7的并行复制策略"}},[t._v("3、mysql5.7的并行复制策略")]),t._v(" "),a("p",[t._v("​\t\tmysql5.7版本的时候，根据mariaDB的并行复制策略，做了相应的优化调整后，提供了自己的并行复制策略，并且可以通过参数slave-parallel-type来控制并行复制的策略：")]),t._v(" "),a("p",[t._v("​\t\t1、当配置的值为DATABASE的时候，表示使用5.6版本的按库并行策略；")]),t._v(" "),a("p",[t._v("​\t\t2、当配置的值为LOGICAL_CLOCK的时候，表示跟mariaDB相同的策略。")]),t._v(" "),a("p",[t._v("​\t\t此时，大家需要思考一个问题："),a("strong",[t._v("同时处于执行状态的所有事务，是否可以并行？")])]),t._v(" "),a("p",[t._v("​\t\t答案是不行的，因为多个执行中的事务是有可能出现锁冲突的，锁冲突之后就会产生锁等待问题。")]),t._v(" "),a("p",[t._v("​\t\t在mariaDB中，所有处于commit状态的事务是可以并行，因为如果能commit的话就说明已经没有锁的问题，但是大家回想下，我们mysql的日志提交是两阶段提交，如下图，其实只要处于prepare状态就已经表示没有锁的问题了。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/mysql/%E4%B8%A4%E9%98%B6%E6%AE%B5%E6%8F%90%E4%BA%A4.png",alt:""}})]),t._v(" "),a("p",[t._v("​\t\t因此，mysql5.7的并行复制策略的思想是：")]),t._v(" "),a("p",[t._v("​\t\t1、同时处于prepare状态的事务，在备库执行是可以并行的。")]),t._v(" "),a("p",[t._v("​\t\t2、处于prepare状态的事务，与处于commit状态的事务之间，在备库上执行也是可以并行的。")]),t._v(" "),a("p",[t._v("​\t\t基于这样的处理机制，我们可以将大部分的日志处于prepare状态，因此可以设置")]),t._v(" "),a("p",[t._v("​\t\t1、binlog_group_commit_sync_delay 参数，表示延迟多少微秒后才调用 fsync;")]),t._v(" "),a("p",[t._v("​\t\t2、binlog_group_commit_sync_no_delay_count 参数，表示累积多少次以后才调用 fsync。")]),t._v(" "),a("h3",{attrs:{id:"_5、基于gtid的主从复制问题"}},[t._v("5、基于GTID的主从复制问题")]),t._v(" "),a("p",[t._v("​\t\t在我们之前讲解的主从复制实操中，每次想要复制，必须要在备机上执行对应的命令，如下所示：")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("change master "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" master_host"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'192.168.85.11'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("master_user"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("master_password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123456'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("master_port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3306")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("master_log_file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master-bin.000001'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("master_log_pos"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("154")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("​\t\t在此配置中我们必须要知道具体的binlog是哪个文件，同时在文件的哪个位置开始复制，正常情况下也没有问题，但是如果是一个主备主从集群，那么如果主机宕机，当从机开始工作的时候，那么备机就要同步从机的位置，此时位置可能跟主机的位置是不同的，因此在这种情况下，再去找位置就会比较麻烦，所以在5.6版本之后出来一个基于GTID的主从复制。")]),t._v(" "),a("p",[t._v("​\t\tGTID(global transaction id)是对于一个已提交事务的编号，并且是一个全局唯一的编号。GTID实际上是由UUID+TID组成的，其中UUID是mysql实例的唯一标识，TID表示该实例上已经提交的事务数量，并且随着事务提交单调递增。这种方式保证事务在集群中有唯一的ID，强化了主备一致及故障恢复能力。")]),t._v(" "),a("h4",{attrs:{id:"_1、基于gtid的搭建"}},[t._v("1、基于GTID的搭建")]),t._v(" "),a("p",[t._v("​\t\t1、修改mysql配置文件，添加如下配置")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("gtid_mode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v("\nenforce"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("gtid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("consistency"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("​\t\t2、重启主从的服务")]),t._v(" "),a("p",[t._v("​\t\t3、从库执行如下命令")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("change master "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" master_host"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'192.168.85.111'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("master_user"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("master_password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123456'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("master_auto_position"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("​\t\t4、主库从库插入数据测试。")]),t._v(" "),a("h3",{attrs:{id:"_2、基于gtid的并行复制"}},[t._v("2、基于GTID的并行复制")]),t._v(" "),a("p",[t._v("​\t\t无论是什么方式的主从复制其实原理相差都不是很大，关键点在于将组提交的信息存放在GTId中。")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("show")]),t._v(" binlog events "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lian-bin.000001'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"/img/mysql/gtid.png",alt:"image-20200724221610397"}})]),t._v(" "),a("p",[t._v("previous_gtids:用于表示上一个binlog最后一个gtid的位置，每个binlog只有一个。")]),t._v(" "),a("p",[t._v("gtid:当开启gtid的时候，每一个操作语句执行前会添加一个gtid事件，记录当前全局事务id，组提交信息被保存在gtid事件中，有两个关键字段，last_committed,sequence_number用来标识组提交信息。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/mysql/gtid2.png",alt:"image-20200724222034179"}})]),t._v(" "),a("p",[t._v("上述日志看起来可能比较麻烦，可以使用如下命令执行：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/mysql/gtid3.png",alt:"image-20200724222128641"}})]),t._v(" "),a("p",[t._v("其中last_committed表示事务提交的时候，上次事务提交的编号，如果事务具有相同的last_committed值表示事务就在一个组内，在备库执行的时候可以并行执行。同时大家还要注意，每个last_committed的值都是上一个组事务的sequence_number值。")]),t._v(" "),a("p",[t._v("看到此处，大家可能会有疑问，如果我们不开启gtid，分组信息该如何保存呢？")]),t._v(" "),a("p",[t._v("其实是一样的，当没有开启的时候，数据库会有一个Anonymous_Gtid，用来保存组相关的信息。")]),t._v(" "),a("p",[t._v("如果大家想看并行的效果的话，可以执行如下代码：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mashibing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sql")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Connection")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sql")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DriverManager")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sql")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PreparedStatement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sql")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SQLException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConCurrentInsert")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jdbc:mysql://192.168.85.111/lian2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.mysql.jdbc.Driver"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" password "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Connection")]),t._v(" conn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            conn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DriverManager")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConnection")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取连接")]),t._v("\n            conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAutoCommit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//关闭自动提交，不然conn.commit()运行到这句会报错")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            e1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开始时间")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" begin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sql前缀")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" prefix "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"INSERT INTO t1 (id,age) VALUES "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 保存sql后缀")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),t._v(" suffix "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置事务为非自动提交")]),t._v("\n            conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAutoCommit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 比起st，pst会更好些")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PreparedStatement")]),t._v(" pst "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PreparedStatement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("prepareStatement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//准备执行语句")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 外层循环，总提交事务次数")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                suffix "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第j次提交步长")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构建SQL后缀")]),t._v("\n                    suffix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"("')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"),"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构建完整SQL")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" sql "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" prefix "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" suffix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" suffix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加执行SQL")]),t._v("\n                pst"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addBatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行操作")]),t._v("\n                pst"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("executeBatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提交事务")]),t._v("\n                conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 清空上一次添加的数据")]),t._v("\n                suffix "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 头等连接")]),t._v("\n            pst"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SQLException")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结束时间")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" end "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 耗时")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"100万条数据插入花费时间 : "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("end "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" begin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" s"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  插入完成"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConCurrentInsert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br"),a("span",{staticClass:"line-number"},[t._v("51")]),a("br"),a("span",{staticClass:"line-number"},[t._v("52")]),a("br"),a("span",{staticClass:"line-number"},[t._v("53")]),a("br"),a("span",{staticClass:"line-number"},[t._v("54")]),a("br"),a("span",{staticClass:"line-number"},[t._v("55")]),a("br"),a("span",{staticClass:"line-number"},[t._v("56")]),a("br"),a("span",{staticClass:"line-number"},[t._v("57")]),a("br"),a("span",{staticClass:"line-number"},[t._v("58")]),a("br"),a("span",{staticClass:"line-number"},[t._v("59")]),a("br"),a("span",{staticClass:"line-number"},[t._v("60")]),a("br"),a("span",{staticClass:"line-number"},[t._v("61")]),a("br"),a("span",{staticClass:"line-number"},[t._v("62")]),a("br"),a("span",{staticClass:"line-number"},[t._v("63")]),a("br"),a("span",{staticClass:"line-number"},[t._v("64")]),a("br"),a("span",{staticClass:"line-number"},[t._v("65")]),a("br"),a("span",{staticClass:"line-number"},[t._v("66")]),a("br"),a("span",{staticClass:"line-number"},[t._v("67")]),a("br"),a("span",{staticClass:"line-number"},[t._v("68")]),a("br"),a("span",{staticClass:"line-number"},[t._v("69")]),a("br"),a("span",{staticClass:"line-number"},[t._v("70")]),a("br"),a("span",{staticClass:"line-number"},[t._v("71")]),a("br")])]),a("h3",{attrs:{id:"bin-log的组提交"}},[t._v("bin log的组提交")]),t._v(" "),a("p",[t._v("​\t  在之前的版本中，mysql的binlog是无法实现组提交的，原因在于redo log和binlog的刷盘串行化问题，")]),t._v(" "),a("pre",[a("code",[t._v("  而实现串行化的目的也是为了保证两份日志保持一致，而在5.6版本之后提供了一种解决方案，能够保证binlog实现组提交。\n  \n  \n  基本思想是：引入队列机制保证 innodb commit顺序与binlog落盘顺序一致，并将事务分组，组内的binlog刷盘动作交给一个事务进行，实现组提交的目的。\n  \n  \n  binlog提交将提交分为了3个阶段，flush阶段，sync阶段和commit阶段。每个阶段都有一个队列，每个队列有一个mutex保护，\n  \n  \n  预定进入队列的第一个线程为leader，其他线程为follower，所有事情交给leader去做，leader做完所有的动作之后，通知follower刷盘结束")])])])},[],!1,null,null,null);s.default=e.exports}}]);